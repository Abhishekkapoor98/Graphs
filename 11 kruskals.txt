#include<bits/stdc++.h>
using namespace std;

#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x<<" "; _print(x); cerr << endl;
#else
#define debug(x);
#endif

typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
// typedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update > pbds; // find_by_order, order_of_key

void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}

template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.ff); cerr << ","; _print(p.ss); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}

#define fast_io ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define lli long long int
#define mod 1000000007
#define PB push_back
#define PPB pop_back
#define MP make_pair
#define vi vector<int>
#define vpi vector<pair<int,int>>
#define vc vector<char>
#define vlli vector<long long int>
#define uos unordered_set<int>
#define min_heap priority_queue<int,vector<int>,greater<int>>
#define max_heap priority_queue<int>
#define pii pair<int,int>
#define F first
#define S second
#define loop(a,b) for(lli i=a;i<=b;i++)
#define endl '\n'
#define ll long long

vpi graph[100005];
vpi MST[100005];
bool visited[100005] = {false};
min_heap Heap;
unordered_map<int,pair<int,int>> look;

void add_edge(int u,int v,int w)
{
	MST[u].PB({v,w});
	MST[v].PB({u,w});
}

void print_graph(vpi graph[],int n)
{
	for(int i=1; i<=n; i++)
	{
		cout<<"Adj list for node: "<<i<<"\n";
		for(auto itr : graph[i])
			cout<<i<<" -> "<<itr.F<<" w: "<<itr.S<<"\n";
		cout<<endl;
	}
}

void make_MST(int n)
{
	cerr<<"\n\nIN make_MST\n";
	debug(n);

	int E = 0,total = 0;
	while(Heap.empty() == false || E < n-1)
	{
		debug(E);

		int w = Heap.top();
		Heap.pop();

		debug(w);

		pair<int,int> pp = look[w];
		int u = pp.F;
		int v = pp.S;

		debug(u);
		debug(v);


		if(visited[u] && visited[v]){
			E++;
		}
		else{
			visited[u] = visited[v] = 1;
			total += w;
			add_edge(u,v,w);
			E++;
		}
		cerr<<"\n\n";
	}

	cout<<"MST weight: "<<total<<endl<<endl<<"MST adjacency list:\n";
	print_graph(MST,n);
}

void solve()
{
	int t;
	cin>>t; 
	debug(t);

	while(t--)
	{
		int n,e;
		cin>>n>>e;
		debug(n);
		debug(e);

		for(int i=0;i<e;i++)
		{
			int u,v,w;
			cin>>u>>v>>w;
			
			debug(u);
			debug(v);
			debug(w);
			cerr<<"\n";

			add_edge(u,v,w);
			Heap.push(w);
			look[w] = {u,v};
		}

		make_MST(n);
	}
}

int main()
{
	fast_io;

#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	freopen("error.txt","w",stderr);
#endif

	solve();

	return 0;
}
